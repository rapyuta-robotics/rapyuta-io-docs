{
  "swagger":"2.0",
  "info":{
    "description":"powered by Flasgger",
    "version":"0.0.0",
    "title":"Api v0"
  },
  "host": "localhost:5600",
  "basePath": "/",
  "tags": [
    {
      "name": "device_manager",
      "description": "Rapyuta IO Device Manager end points"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths":{
    "/api/v0/cmd/":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "device_ids",
                "cmd"
              ],
              "type":"object",
              "properties":{
                "shell":{
                  "type":"string",
                  "description":"Shell to execute under. Defaults to the system default shell."
                },
                "env":{
                  "additionalProperties":{
                    "type":"string"
                  },
                  "type":"object",
                  "description":"A list of environment variables to be set prior to execution."
                },
                "bg":{
                  "type":"boolean",
                  "description":"If True, run command in background and do not await or deliver it's results"
                },
                "runas":{
                  "type":"string",
                  "description":"User to run command as."
                },
                "cmd":{
                  "type":"string",
                  "description":"The command to run. eg- ls -lart /home"
                },
                "device_ids":{
                  "items":{
                    "type":"string"
                  },
                  "type":"array"
                },
                "cwd":{
                  "type":"string",
                  "description":"The current working directory to execute the command in."
                }
              }
            }
          }
        ],
        "tags":[
          "Command"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Executes given command on devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Hash of devices with command output.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object"
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/labels/{label_id}":{
      "put":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of label",
            "in":"path",
            "name":"label_id"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "type":"object",
              "properties":{
                "key":{
                  "type":"string"
                },
                "value":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Labels"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Update label for a given device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      },
      "delete":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of label",
            "in":"path",
            "name":"label_id"
          }
        ],
        "tags":[
          "Labels"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Remove labels from a device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/auth-keys/":{
      "post":{
        "description":"Returns a token which can be exchanged for the install script of<br/>the device.",
        "parameters":[
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "name"
              ],
              "type":"object",
              "properties":{
                "name":{
                  "type":"string"
                },
                "description":{
                  "type":"string"
                }
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          }
        ],
        "tags":[
          "Auth-Keys"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Generates auth credentials for a device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Jwt token",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"string",
                      "description":"jwt token"
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing or not unique device Id",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/devices/{device_id}":{
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          }
        ],
        "tags":[
          "Devices"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns data of given device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns device",
            "schema":{
              "$ref":"#/definitions/device_response"
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/topics/{device_id}":{
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Device ID",
            "in":"path",
            "name":"device_id"
          }
        ],
        "tags":[
          "Topics"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns list of topics.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns list of topics.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "items":{
                        "type":"object",
                        "properties":{
                          "is_directory":{
                            "type":"string"
                          },
                          "name":{
                            "type":"string"
                          }
                        }
                      },
                      "type":"array"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"No topics found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/labels/{device_id}/":{
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          }
        ],
        "tags":[
          "Labels"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns labels for given device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns list of labels.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "key":{
                          "type":"string"
                        },
                        "internal":{
                          "type":"boolean"
                        },
                        "id":{
                          "type":"integer"
                        },
                        "value":{
                          "type":"string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/mission/device_selection/":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "schema":{
              "type": "object",
              "required":[
                "selection_criteria",
                "clause"
              ],
              "properties":{
                "selection_criteria":{
                  "items":{
                    "$ref":"#/definitions/labels"
                  },
                  "type":"array"
                },
                "clause":{
                  "type":"string"
                }
              }
            },
            "name":"Data",
            "in":"body",
            "required":true,
            "type":"object",
            "description":"data for choosing the best robot"
          }
        ],
        "tags":[
          "Mission"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Choose the best device for mission",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Device selected"
          },
          "404":{
            "description":"Can't find devices for mission",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "432":{
            "description":"Max_value is lower than Min_value"
          }
        }
      }
    },
    "/api/v0/logs/deserialize":{
      "post":{
        "description":"Returns the resumable upload url , deserialize request id",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "origin"
              ],
              "type":"object",
              "properties":{
                "origin":{
                  "required":true,
                  "type":"string",
                  "description":"origin of log (device|raw)"
                },
                "device_path":{
                  "type":"string",
                  "description":"path of file on device"
                },
                "data_md5":{
                  "type":"string",
                  "description":"md5 sum of the logfile"
                },
                "mission_id":{
                  "type":"string",
                  "description":"mission that generated the logs"
                },
                "deserializer":{
                  "type":"string",
                  "description":"deserializer to use"
                },
                "device_id":{
                  "type":"string",
                  "description":"device that generated the logs"
                },
                "file_path":{
                  "type":"string",
                  "description":"file path"
                },
                "metadata":{
                  "type":"string",
                  "description":"misc request key value metadata"
                }
              }
            }
          }
        ],
        "tags":[
          "Logs"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Creates an upload request to google storage.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Deserialize Creation Request Successful",
            "schema":{
              "type":"object",
              "properties":{
                "resumable_url":{
                  "type":"string"
                },
                "request_uuid":{
                  "type":"string"
                }
              }
            }
          },
          "400":{
            "description":"parameter missing.",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/topics/{device_id}/unsubscribed":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Device ID",
            "in":"path",
            "name":"device_id"
          },
          {
            "in":"body",
            "description":"List of topics names to subscribe",
            "name":"data",
            "schema":{
              "required":[
                "topics"
              ],
              "type":"object",
              "properties":{
                "topics":{
                  "type":"array",
                  "items": {
                    "type":"string"
                  }
                },
                "kind":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Topics"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Unsubscribes topics",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Topic unsubscribed"
          },
          "404":{
            "description":"Topic not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/deployments/":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "io_deployment_id",
                "deployment_id",
                "component_id",
                "device_id",
                "executables"
              ],
              "type":"object",
              "properties":{
                "executables":{
                  "items":{
                    "required":[
                      "name"
                    ],
                    "type":"object",
                    "properties":{
                      "docker":{
                        "type":"string",
                        "description":"docker image url"
                      },
                      "command":{
                        "type":"string"
                      },
                      "name":{
                        "type":"string"
                      }
                    }
                  },
                  "type":"array"
                },
                "component_id":{
                  "type":"string"
                },
                "cloud_bridge_config":{
                  "type":"object"
                },
                "io_deployment_id":{
                  "type":"string"
                },
                "global_vars":{
                  "additionalProperties":{

                  },
                  "type":"object"
                },
                "deployment_id":{
                  "type":"string"
                },
                "runtime":{
                  "enum":[
                    "preinstalled",
                    "docker"
                  ],
                  "type":"string",
                  "description":"device runtime"
                },
                "device_id":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Deployment"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Runs given deployment tasks on devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"List of devices with their output.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "device_id":{
                          "type":"object",
                          "description":"response from device.",
                          "properties":{
                            "status":{
                              "enum":[
                                "success",
                                "error"
                              ],
                              "type":"string"
                            },
                            "response":{
                              "type":"object",
                              "properties":{
                                "data":{
                                  "type":"object"
                                },
                                "error":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/auth-keys/{device_id}/token/":{
      "get":{
        "description":"The token lasts for 10 minutes",
        "parameters":[
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          }
        ],
        "tags":[
          "Auth-Keys"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Creates a JWT token",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"JWT token",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"string",
                      "description":"jwt token"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/update/system/status":{
      "get":{
        "description":"Returns present log output.",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"query",
            "name":"device_id"
          }
        ],
        "tags":[
          "Updater"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns status of system update.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "schema":{
              "$ref":"#/definitions/package_response"
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing or salt error occurred",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/deployments/{deployment_id}":{
      "delete":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Device Service instance id",
            "in":"path",
            "name":"deployment_id"
          }
        ],
        "tags":[
          "Deployment"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Brings down a running deployment task on devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"List of devices with their output.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "device_id":{
                          "type":"object",
                          "description":"response from device.",
                          "properties":{
                            "status":{
                              "enum":[
                                "success",
                                "error"
                              ],
                              "type":"string"
                            },
                            "response":{
                              "type":"object",
                              "properties":{
                                "data":{
                                  "type":"object"
                                },
                                "error":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      },
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Device Service instance id",
            "in":"path",
            "name":"deployment_id"
          }
        ],
        "tags":[
          "Deployment"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns status of deployment task for given devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"List of devices with their output.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "device_id":{
                          "type":"object",
                          "description":"response from device.",
                          "properties":{
                            "status":{
                              "enum":[
                                "success",
                                "error"
                              ],
                              "type":"string"
                            },
                            "response":{
                              "type":"object",
                              "properties":{
                                "data":{
                                  "type":"object"
                                },
                                "error":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/logs/{device_id}/files":{
      "post":{
        "description":"Accepts file as Post-Multipart.",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "required":true,
            "type":"string",
            "description":"file path",
            "in":"query",
            "name":"file_path"
          },
          {
            "in":"formData",
            "type":"file",
            "description":"file as form data",
            "name":"file"
          }
        ],
        "tags":[
          "Logs"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Uploads file to device manager.",
        "consumes":[
          "application/json",
          "multipart/form-data"
        ],
        "responses":{
          "200":{
            "description":"File uploaded successfully'"
          },
          "400":{
            "description":"parameter missing or no file attached.",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      },
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          }
        ],
        "tags":[
          "Logs"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns list of log files present in logs directory.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns list of files.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "items":{
                        "type":"object",
                        "properties":{
                          "is_directory":{
                            "type":"string"
                          },
                          "name":{
                            "type":"string"
                          }
                        }
                      },
                      "type":"array"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/orchestration/":{
      "post":{
        "description":"Provision the device for logging, etc.",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "endpoints"
              ],
              "type":"object",
              "properties":{
                "endpoints":{
                  "items":{
                    "required":[
                      "device_id"
                    ],
                    "type":"object",
                    "properties":{
                      "log":{
                        "type":"object",
                        "properties":{
                          "directory_path":{
                            "type":"string"
                          }
                        }
                      },
                      "device_id":{
                        "type":"string"
                      }
                    }
                  },
                  "type":"array"
                }
              }
            }
          }
        ],
        "tags":[
          "Orchestration"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Does setup tasks on the device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "device_id":{
                          "type":"object",
                          "description":"response from device.",
                          "properties":{
                            "status":{
                              "enum":[
                                "success",
                                "error"
                              ],
                              "type":"string"
                            },
                            "response":{
                              "type":"object",
                              "properties":{
                                "data":{
                                  "type":"object"
                                },
                                "error":{
                                  "type":"string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/devices/":{
      "put":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "device_id"
              ],
              "type":"object",
              "properties":{
                "status":{
                  "type":"string"
                },
                "device_id":{
                  "type":"string"
                },
                "description":{
                  "type":"string"
                },
                "name":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Devices"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Updates given device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      },
      "get":{
        "description":"Response will be a list of registered and unregistered devices.",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          }
        ],
        "tags":[
          "Devices"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Returns list of all devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"returns list of devices",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "items":{
                        "type":"object",
                        "properties":{
                          "status":{
                            "type":"string"
                          },
                          "uuid":{
                            "type":"string"
                          },
                          "name":{
                            "type":"string"
                          },
                          "registration_time":{
                            "type":"string"
                          },
                          "last_online":{
                            "type":"string"
                          },
                          "created_by":{
                            "type":"string"
                          },
                          "fingerprint":{
                            "type":"string"
                          },
                          "keys_present":{
                            "type":"boolean"
                          },
                          "description":{
                            "type":"string"
                          }
                        }
                      },
                      "type":"array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0/topics/{device_id}/status":{
      "get":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"path",
            "description":"Device ID",
            "name":"device_id"
          }
        ],
        "produces":[
          "application/json"
        ],
        "tags":[
          "Topics"
        ],
        "summary":"Returns status of topics.",
        "responses":{
          "200":{
            "description":"Returns Status of topics.",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "items":{
                        "type":"object",
                        "properties":{
                          "is_directory":{
                            "type":"string"
                          },
                          "name":{
                            "type":"string"
                          }
                        }
                      },
                      "type":"array"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"No topics found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/topics/{device_id}/subscribe":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Device ID",
            "in":"path",
            "name":"device_id"
          },
          {
            "in":"body",
            "description":"List of topics names to subscribe",
            "name":"data",
            "schema":{
              "required":[
                "topics"
              ],
              "type":"object",
              "properties":{
                "topics":{
                  "type":"array",
                  "items": {
                    "type": "string"
                  }
                },
                "kind":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Topics"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Subscribes topics",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Topic subscribed"
          },
          "404":{
            "description":"Topic not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/auth-keys/{device_id}":{
      "get":{
        "description":null,
        "parameters":[
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":false,
            "in":"query",
            "description":"Specifies the download type, either config zip or script",
            "name":"download_type",
            "type":"string",
            "enum":[
                "zip",
                "script"
            ]
          }
        ],
        "tags":[
          "Auth-Keys"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Download the install script or zip file for the device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"install.sh or <device_id>.zip as attachment"
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/labels/{device_id}":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "required":true,
            "in":"body",
            "description":"key values for labels",
            "name":"body",
            "schema":{
              "type":"object"
            }
          }
        ],
        "tags":[
          "Labels"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Add labels to a device.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "items":{
                        "type":"object",
                        "properties":{
                          "key":{
                            "type":"string"
                          },
                          "id":{
                            "type":"integer"
                          },
                          "value":{
                            "type":"string"
                          }
                        }
                      },
                      "type":"array"
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing or not unique label key",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/logs/download":{
      "get":{
        "description":"Returns a signed_url",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"Path of the file to be downloaded",
            "in":"query",
            "name":"file_path"
          }
        ],
        "tags":[
          "Logs"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Create singed_url to download file from google storage.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Signed URL Creation Request Successful",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object",
                      "properties":{
                        "signed_url":{
                          "type":"string",
                          "description":"signed url to get download file"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description":"parameter missing.",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/update/system":{
      "post":{
        "description":null,
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "required":[
                "device_id"
              ],
              "type":"object",
              "properties":{
                "device_id":{
                  "type":"string"
                },
                "log_output":{
                  "type":"string"
                },
                "script":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "tags":[
          "Updater"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Runs system updates.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "schema":{
              "$ref":"#/definitions/update_response"
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing or salt error occurred",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/logs/{device_id}/files/download":{
      "get":{
        "description":"Returns file as attachment.",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "required":true,
            "type":"string",
            "description":"file path",
            "in":"query",
            "name":"file_path"
          }
        ],
        "tags":[
          "Logs"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Downloads given log file from log directory.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"requested file as attachment"
          },
          "404":{
            "description":"device not found/ file not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing or invalid file path etc.",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/terminal/{device_id}/start":{
      "get":{
        "description":"server to make the tunnel",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          }
        ],
        "tags":[
          "Terminal"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Starts the ssh tunnel on device and make appropriate api calls to webssh",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns",
            "schema":{
              "type": "object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "token":{
                      "type":"string",
                      "description":"it will be used for web socket connection from browser"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "500":{
            "description":"internal server error",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/devices/bulk":{
      "put":{
        "description":null,
        "parameters":[
          {
            "required":false,
            "type":"string",
            "description":"user identifier of the authenticated user",
            "in":"header",
            "name":"user"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "in":"body",
            "description":"request body",
            "name":"body",
            "schema":{
              "items":{
                "required":[
                  "device_id"
                ],
                "type":"object",
                "properties":{
                  "status":{
                    "type":"string"
                  },
                  "device_id":{
                    "type":"string"
                  },
                  "description":{
                    "type":"string"
                  },
                  "name":{
                    "type":"string"
                  }
                }
              },
              "type":"array"
            }
          }
        ],
        "tags":[
          "Devices"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Updates multiple devices.",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Successful response",
            "schema":{
              "type":"object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "data":{
                      "type":"object"
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    },
    "/api/v0/terminal/{device_id}/stop":{
      "get":{
        "description":"server to close the tunnel",
        "parameters":[
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "required":false,
            "type":"string",
            "description":"group identifier",
            "in":"header",
            "name":"group"
          },
          {
            "required":true,
            "type":"string",
            "description":"ID of device",
            "in":"path",
            "name":"device_id"
          },
          {
            "description":"if True, only then webssh api call will be made",
            "in":"query",
            "default":true,
            "required":false,
            "type":"boolean",
            "name":"force"
          }
        ],
        "tags":[
          "Terminal"
        ],
        "produces":[
          "application/json"
        ],
        "summary":"Stops the ssh tunnel on device and make appropriate api calls to webssh",
        "consumes":[
          "application/json"
        ],
        "responses":{
          "200":{
            "description":"Returns",
            "schema":{
              "type": "object",
              "properties":{
                "status":{
                  "default":"success",
                  "type":"string"
                },
                "response":{
                  "type":"object",
                  "properties":{
                    "message":{
                      "type":"string",
                      "description":"will be a simple message , for example,ing \"tunnel closed\""
                    }
                  }
                }
              }
            }
          },
          "404":{
            "description":"device not found",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "500":{
            "description":"internal server error",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          },
          "400":{
            "description":"parameter missing",
            "schema":{
              "$ref":"#/definitions/error_response"
            }
          }
        }
      }
    }
  },
  "definitions":{
    "update_response":{
      "type":"object",
      "properties":{
        "status":{
          "default":"success",
          "type":"string"
        },
        "response":{
          "type":"object",
          "properties":{
            "data":{
              "items":{
                "type":"string"
              },
              "type":"array"
            }
          }
        }
      }
    },
    "package_response":{
      "type":"object",
      "properties":{
        "status":{
          "default":"success",
          "type":"string"
        },
        "response":{
          "type":"object",
          "properties":{
            "data":{
              "type":"string"
            }
          }
        }
      }
    },
    "fields":{
      "type":"object",
      "properties":{
        "selec_criteria":{
          "schema":{
            "type":"object",
            "properties":{
              "clause":{
                "type":"string"
              },
              "fields":{
                "items":{
                  "properties":{
                    "values":{
                      "type":"object",
                      "schema":{
                        "type": "object",
                        "required":[
                          "operator",
                          "field",
                          "values"
                        ],
                        "properties":{
                          "operator":{
                            "type":"string"
                          },
                          "field":{
                            "type":"string"
                          },
                          "values":{
                            "type":"object",
                            "schema":{
                              "type": "object",
                              "required":[
                                "min_value",
                                "max_value"
                              ],
                              "properties":{
                                "max_value":{
                                  "type":"integer"
                                },
                                "min_value":{
                                  "type":"integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "type":"array"
              }
            }
          }
        },
        "measurement":{
          "type":"string"
        }
      }
    },
    "labels":{
      "properties":{
        "labels":{
          "type":"object",
          "schema":{
            "$ref":"#/definitions/fields"
          }
        },
        "measurements":{
          "type":"object",
          "schema":{
            "$ref":"#/definitions/fields"
          }
        }
      }
    },
    "error_response":{
      "properties":{
        "status":{
          "default":"error",
          "type":"string"
        },
        "response":{
          "type":"object",
          "properties":{
            "data":{
              "type":"object"
            },
            "error":{
              "type":"string"
            }
          }
        }
      },
      "description":"---<br/>properties:<br/>  status:<br/>    type: string<br/>    default: 'error'<br/>  response:<br/>    type: object<br/>    properties:<br/>      error:<br/>        type: string<br/>      data:<br/>        type: objec"
    },
    "device_response":{
      "type":"object",
      "properties":{
        "status":{
          "default":"success",
          "type":"string"
        },
        "response":{
          "type":"object",
          "properties":{
            "data":{
              "type":"object",
              "properties":{
                "status":{
                  "type":"string"
                },
                "username":{
                  "type":"string"
                },
                "uuid":{
                  "type":"string"
                },
                "name":{
                  "type":"string"
                },
                "saltversion":{
                  "type":"string"
                },
                "registration_time":{
                  "type":"string"
                },
                "labels":{
                  "items":{
                    "type":"object",
                    "properties":{
                      "key":{
                        "type":"string"
                      },
                      "internal":{
                        "type":"boolean"
                      },
                      "id":{
                        "type":"integer"
                      },
                      "value":{
                        "type":"string"
                      }
                    }
                  },
                  "type":"array"
                },
                "last_online":{
                  "type":"string"
                },
                "created_by":{
                  "type":"string"
                },
                "deployments":{
                  "items":{
                    "type":"object",
                    "properties":{
                      "phase":{
                        "type":"string"
                      },
                      "deployment_id":{
                        "type":"string"
                      },
                      "error_code":{
                        "type":"string"
                      },
                      "io_deployment_id":{
                        "type":"string"
                      }
                    }
                  },
                  "type":"array"
                },
                "lsb_distrib_description":{
                  "type":"string"
                },
                "host":{
                  "type":"string"
                },
                "ip_interfaces":{
                  "type":"object"
                },
                "description":{
                  "type":"string"
                }
              }
            }
          }
        }
      }
    }
  }
}
